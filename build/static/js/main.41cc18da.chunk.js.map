{"version":3,"sources":["components/layout/Navigation.module.css","pages/NewQuotes.module.css","components/quotes/QuotesList.module.css","pages/AllQuotes.module.css","pages/QuoteDetail.module.css","components/comments/Comments.module.css","components/comments/CommentList.module.css","components/layout/Navigation.js","components/quotes/QuotesList.js","hooks/use-http.js","lib/requests.js","components/UI/Loader.js","pages/AllQuotes.js","pages/NewQuotes.js","components/comments/CommentList.js","components/comments/Comments.js","pages/QuoteDetail.js","App.js","index.js"],"names":["module","exports","Navigation","className","classes","header","links","navData","isActive","link","active","to","QuotesList","props","useState","show","setShow","useEffect","timer","setTimeout","clearTimeout","list","content","text","author","link_container","id","httpReducer","state","action","type","data","loading","error","useHttp","requestFn","pending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","responseData","BASE_URL","addQuote","fetch","method","headers","body","JSON","stringify","getAllQuotes","response","json","key","loadedData","push","getSingleQuote","addComment","console","log","getAllComments","Loader","AllQuotes","navigate","useNavigate","location","useLocation","ascending","URLSearchParams","search","get","quotes","sort","quoteA","quoteB","sortQuotes","center","container","btn","onClick","pathname","filler","lists","map","NewQuotes","setAuthor","textRef","useRef","form","onSubmit","event","preventDefault","current","value","TextField","label","variant","onChange","target","text_label","rows","ref","btn_box","CommentList","item","Comments","fetchData","fetchedData","showTextArea","setShowTextArea","useParams","comment","QuoteDetail","setShowComments","details","path","element","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.41cc18da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Navigation_header__1yF_L\",\"links\":\"Navigation_links__2Sg6A\",\"link\":\"Navigation_link__1Jlvi\",\"active\":\"Navigation_active__3ifum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quotes\":\"NewQuotes_quotes__pRvbd\",\"form\":\"NewQuotes_form__1eD6q\",\"author\":\"NewQuotes_author__kAhh-\",\"text\":\"NewQuotes_text__Hfyu3\",\"text_label\":\"NewQuotes_text_label__3pPEz\",\"btn_box\":\"NewQuotes_btn_box__XotB7\",\"btn\":\"NewQuotes_btn__1n8dW\",\"center\":\"NewQuotes_center__3GC2l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuotesList_list__Uq3Sa\",\"show\":\"QuotesList_show__VFaWk\",\"link_container\":\"QuotesList_link_container__yh5Cs\",\"content\":\"QuotesList_content__14krc\",\"text\":\"QuotesList_text__fEuxN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AllQuotes_container__3hxms\",\"lists\":\"AllQuotes_lists__15Xi_\",\"btn\":\"AllQuotes_btn___ULjh\",\"filler\":\"AllQuotes_filler__3oDrs\",\"center\":\"AllQuotes_center__coxE3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"details\":\"QuoteDetail_details__2nEOA\",\"author\":\"QuoteDetail_author__2LfM4\",\"btn_box\":\"QuoteDetail_btn_box__2uLuY\",\"comment\":\"QuoteDetail_comment__2Y7dt\",\"text\":\"QuoteDetail_text__3XToK\",\"center\":\"QuoteDetail_center__1X-YT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment\":\"Comments_comment__RPbZp\",\"text\":\"Comments_text__2yL3b\",\"btn_box\":\"Comments_btn_box__7mJfl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lists\":\"CommentList_lists__vrfNy\",\"list\":\"CommentList_list__eWa05\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport classes from './Navigation.module.css'\r\n\r\nexport default function Navigation() {\r\n  return (\r\n      <header className={classes.header}>\r\n          <h2>Wise Sayings</h2>\r\n          <div className={classes.links}>\r\n              <NavLink className={navData => navData.isActive ? `${classes.link} ${classes.active}` : classes.link} to='/quotes'>All Quotes</NavLink>\r\n              <NavLink className={navData => navData.isActive ? `${classes.link} ${classes.active}` : classes.link} to='/new-quote'>New Quotes</NavLink>\r\n          </div>\r\n    </header>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport classes from './QuotesList.module.css'\r\n\r\nexport default function QuotesList(props) {\r\n    // console.log(props.text)\r\n  const [show, setShow] = useState(false)\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setShow(true)\r\n    }, 500)\r\n    return () => {\r\n      clearTimeout(timer)\r\n    }\r\n  })\r\n  return (\r\n    <li key={props.id} className={`${show ? `${classes.list} ${classes.show}` : classes.list}`}>\r\n          <div className={classes.content}>\r\n              <p className={classes.text}>{props.text}</p>\r\n              <p>{props.author}</p>\r\n          </div>\r\n          <div className={classes.link_container}>    \r\n          <Link to={`/detail/${props.id}`}>View Fullscreen</Link>\r\n          </div>\r\n    </li>\r\n  )\r\n}\r\n\r\n// style={{transitionDelay:'2s'}}\r\n// {`${show ? `${classes.list} ${classes.show}` : classes.list}`} style={{transitionDelay:`${0.1*props.id}s`}","import { useCallback, useReducer } from \"react\";\r\n\r\nconst intialState = {\r\n    data: null,\r\n    loading: null,\r\n    error:null\r\n}\r\nfunction httpReducer(state, action) {\r\n    if (action.type === \"SEND\") {\r\n        return {\r\n            data: null,\r\n            loading: \"pending\",\r\n            error:null\r\n        }\r\n    }\r\n    if (action.type === \"SUCCESS\") {\r\n        return {\r\n            data: action.data,\r\n            loading: \"completed\",\r\n            error:null\r\n        }\r\n    }\r\n    if (action.type === \"ERROR\") {\r\n        return {\r\n            data: null,\r\n            loading: null,\r\n            error: action.data\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction useHttp(requestFn, pending=false) {\r\n    const [httpState, dispatch] = useReducer(httpReducer, {\r\n            data: null,\r\n            loading: pending ? 'pending' : null,\r\n            error:null\r\n    })\r\n    const sendRequest = useCallback(async (requestData) => {\r\n        dispatch({ type: \"SEND\" })\r\n        try {\r\n            const responseData = await requestFn(requestData) \r\n            // console.log(responseData, requestFn)\r\n            dispatch({type:\"SUCCESS\", data:responseData})\r\n        } catch(error) {\r\n            dispatch({type:\"ERROR\", error})\r\n        }\r\n        \r\n    },[requestFn])\r\n    return {\r\n        ...httpState,\r\n        sendRequest\r\n    }\r\n}\r\n\r\nexport default useHttp","const BASE_URL = \"https://wise-sayings-506f2-default-rtdb.firebaseio.com\"\r\nexport async function addQuote(data) {\r\n    const response = await fetch(`${BASE_URL}/quotes.json`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(data)\r\n    })\r\n}\r\n\r\nexport async function getAllQuotes() {\r\n    const response = await fetch(`${BASE_URL}/quotes.json`)\r\n    const data = await response.json()\r\n    const loadedData = []\r\n    for (const key in data) {\r\n        loadedData.push({\r\n            author: data[key].author,\r\n            text: data[key].text,\r\n            id:key\r\n        })\r\n    }\r\n    // console.log(loadedData)\r\n    return loadedData\r\n}\r\n\r\nexport async function getSingleQuote(id) {\r\n    const response = await fetch(`${BASE_URL}/quotes/${id}.json`)\r\n    const data = await response.json()\r\n    return data\r\n}\r\n\r\nexport async function addComment(data) {\r\n    console.log(data)\r\n    const response = await fetch(`${BASE_URL}/comments/${data.id}.json`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({text:data.text})\r\n    })\r\n    const postData = response.json()\r\n}\r\n\r\nexport async function getAllComments(id) {\r\n    const response = await fetch(`${BASE_URL}/comments/${id}.json`)\r\n    const data = await response.json()\r\n    const loadedData = []\r\n    for (const key in data) {\r\n        loadedData.push({\r\n            author: data[key].author,\r\n            text: data[key].text,\r\n            id:key\r\n        })\r\n    }\r\n    // console.log(loadedData,99)\r\n    return loadedData\r\n}","import React from 'react'\r\nimport './Loader.css'\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className='loader'></div>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport QuotesList from '../components/quotes/QuotesList'\r\nimport useHttp from '../hooks/use-http'\r\nimport { getAllQuotes } from '../lib/requests'\r\nimport classes from './AllQuotes.module.css'\r\nimport { useNavigate, useLocation } from 'react-router-dom'\r\nimport Loader from '../components/UI/Loader'\r\n\r\nfunction sortQuotes(quotes, ascending) {\r\n  quotes.sort((quoteA, quoteB) => {\r\n    if (ascending) {\r\n      return quoteA.id > quoteB.id ? 1 : -1\r\n    }\r\n    else {\r\n      return quoteA.id < quoteB.id ? 1 : -1\r\n    }\r\n  })\r\n}\r\n\r\nexport default function AllQuotes() {\r\n  const { sendRequest, data: loadedData, loading } = useHttp(getAllQuotes, true)\r\n\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n  const queryParams = new URLSearchParams(location.search)\r\n  const ascending = queryParams.get('sort') === 'asc'\r\n  // console.log(ascending, 6)\r\n\r\n  if (loadedData) {\r\n    sortQuotes(loadedData, ascending)\r\n  }\r\n\r\n  function sortHandler() {\r\n    navigate(`${location.pathname}?sort=${ascending ? 'dsc': 'asc'}`)\r\n  }\r\n\r\n  useEffect(() => {\r\n    sendRequest()\r\n  }, [])\r\n\r\n  console.log(loadedData)\r\n  if (loading === 'pending') {\r\n    return <div className={classes.center}><Loader /></div>\r\n  }\r\n  return (\r\n    <div className={classes.container}>\r\n      {/* <div className={classes.center}><Loader /></div> */}\r\n      <button className={classes.btn} onClick={sortHandler}>Sort {`${ascending ? \"Ascending\" : \"Decending\"}`}</button>\r\n      <div className={classes.filler}></div>\r\n      <ul className={classes.lists}>\r\n        {loadedData.map((data, id) => <QuotesList key={id} text={data.text} author={data.author} id={data.id} />)}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n","import { Button, TextField } from '@material-ui/core'\r\nimport React, { useRef, useState } from 'react'\r\nimport classes from './NewQuotes.module.css'\r\nimport useHttp from '../hooks/use-http'\r\nimport { addQuote } from '../lib/requests'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport Loader from '../components/UI/Loader'\r\n\r\nexport default function NewQuotes() {\r\n    const { sendRequest, loading } = useHttp(addQuote)\r\n    const [author, setAuthor] = useState('')\r\n    const textRef = useRef()\r\n    const navigate = useNavigate()\r\n\r\n    function setAuthorHandler(event) {\r\n        setAuthor(event.target.value)\r\n    }\r\n    \r\n    function submitHandler(event) {\r\n        event.preventDefault()\r\n        sendRequest({\r\n            author,\r\n            text: textRef.current.value\r\n        })\r\n     }\r\n    if (loading === \"pending\") {\r\n        return <div className={classes.center}><Loader /></div>\r\n    } \r\n    if (loading === 'completed') {\r\n        navigate('/quotes')\r\n    }\r\n  return (\r\n      <div className={classes.quotes}>\r\n          <form className={classes.form} onSubmit={submitHandler}>\r\n              <TextField className={classes.author}\r\n                  label='Author'\r\n                  variant='outlined'\r\n                  onChange={setAuthorHandler}\r\n              />\r\n              <label className={classes.text_label}>Add your Quote</label>\r\n              <textarea className={classes.text} id='text' rows='5' ref={textRef}></textarea>\r\n              <div className={classes.btn_box}>\r\n              <button className={classes.btn}>Add Quote</button>\r\n              </div>\r\n          </form>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport classes from './CommentList.module.css'\r\n\r\nexport default function CommentList(props) {\r\n    // console.log(props,9)\r\n  return (\r\n      <ul className={classes.lists}>\r\n          {props.data.map((item, id) => <li className={classes.list}>{item.text}</li>)}\r\n    </ul>\r\n  )\r\n}\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport useHttp from '../../hooks/use-http'\r\nimport { addComment, getAllComments } from '../../lib/requests'\r\nimport Loader from '../UI/Loader'\r\nimport CommentList from './CommentList'\r\nimport classes from './Comments.module.css'\r\nexport default function Comments() {\r\n    const { sendRequest, data: loadedData, loading } = useHttp(addComment)\r\n    const { sendRequest:fetchData, data: fetchedData, loading:pending } = useHttp(getAllComments, true)\r\n    const [showTextArea, setShowTextArea] = useState(false)\r\n    const textRef = useRef()\r\n    const params = useParams()\r\n    const {id} = params\r\n    // console.log(fetchedData,9)\r\n    useEffect(() => {\r\n        fetchData(id)\r\n\r\n    },[])\r\n    useEffect(() => {\r\n        if (loading === 'completed') {\r\n            fetchData(id)\r\n        }\r\n    },[fetchData, loading])\r\n    // const fetchCommentHandler = useCallback(() => {\r\n    //     fetchData(id)\r\n    // },[fetchData])\r\n    function addCommentHandler() {\r\n        sendRequest({\r\n            id,\r\n            text: textRef.current.value\r\n        })\r\n    }\r\n\r\n    function showTextAreaHandler() {\r\n        setShowTextArea(true)\r\n    }\r\n  return (\r\n    <div className={classes.comment}>\r\n          <h1>User Comments</h1>\r\n          <p>Your Comment</p> \r\n         {loading === 'pending' && <div><Loader /></div>}\r\n        {showTextArea && <textarea className={classes.text} id='text' rows='5' ref={textRef}></textarea>}\r\n        <div className={classes.btn_box}>\r\n          <button onClick={!showTextArea ? showTextAreaHandler : addCommentHandler}>Add {`${!showTextArea ? 'a' : ''}`} Comment</button>\r\n          </div>\r\n          {pending === 'pending' && <Loader />}\r\n          {pending === 'completed' &&<CommentList data={fetchedData} />}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link, Outlet, Route, Routes, useMatch, useParams } from 'react-router-dom'\r\nimport CommentList from '../components/comments/CommentList'\r\nimport Comments from '../components/comments/Comments'\r\nimport Loader from '../components/UI/Loader'\r\nimport useHttp from '../hooks/use-http'\r\nimport { getSingleQuote } from '../lib/requests'\r\nimport classes from './QuoteDetail.module.css'\r\n\r\nexport default function QuoteDetail(props) {\r\n  const { sendRequest, data: loadedData, loading } = useHttp(getSingleQuote, true)\r\n  const [showComments, setShowComments] = useState(false)\r\n  const params = useParams()\r\n  // console.log(params)\r\n  const {id} = params\r\n  useEffect(() => {\r\n    sendRequest(id)\r\n  }, [id, sendRequest])\r\n\r\n  if (loading === 'pending') {\r\n    return <div className={classes.center}><Loader /></div>\r\n  }\r\n\r\n  function showCommentHandler() {\r\n      setShowComments(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.details}>\r\n        <p>{loadedData.text}</p>\r\n        <div className={classes.author}>{loadedData.author}</div>\r\n      </div>\r\n      <Routes>\r\n      <Route path='' element={<div className={classes.btn_box} onClick={showCommentHandler}>\r\n        <Link to={`comments`}>load comment</Link>\r\n      </div>} />\r\n      </Routes>\r\n      \r\n      <Outlet />\r\n    </>\r\n  )\r\n}\r\n","import { Route, Routes } from \"react-router-dom\";\nimport Navigation from \"./components/layout/Navigation\";\nimport AllQuotes from \"./pages/AllQuotes\";\nimport NewQuotes from \"./pages/NewQuotes\";\nimport QuoteDetail from \"./pages/QuoteDetail\"\nimport './App.css'\nimport Comments from \"./components/comments/Comments\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n    <Navigation />\n      <Routes>\n        <Route path=\"\" element={<p className='home-text'>Hello, Welcome To Wise Sayings</p>} />\n      <Route path=\"/quotes\" element={<AllQuotes />} />\n      <Route path=\"/new-quote\" element={<NewQuotes />} />\n        <Route path=\"/detail/:id\" element={<QuoteDetail />}>\n          <Route path={`comments`} element={<Comments />} />\n      </Route>\n    </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<BrowserRouter>\n    <App />\n  </BrowserRouter>);\n"],"sourceRoot":""}